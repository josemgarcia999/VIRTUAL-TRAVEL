<!--Postgres-->
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5433/test
#spring.datasource.url=jdbc:postgresql://localhost:5433/test
spring.datasource.username=jose
spring.datasource.password=jose






<!--H2-->
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.datasource.url=jdbc:h2:file:~/DB1
#spring.datasource.url=jdbc:h2:~/DB1;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=create-drop



<!--Kafka-->

message.topic.name=mytopic_1
message.topic.name2=mytopic_2
message.group.name=groupId1
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=mygroup

spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= com.example.BackEmpresa.shared.kafka.Serializer.ReservaOutputDtoSerializer

spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= com.example.BackEmpresa.shared.kafka.Deserializer.ReservaOutputDtoDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*

server.port=8080
